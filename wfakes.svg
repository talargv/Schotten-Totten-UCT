<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="362" onload="init(evt)" viewBox="0 0 1200 362" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="362" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o wfakes.svg -s python test2.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="351.00"> </text><svg id="frames" x="10" width="1180" total_samples="55492"><g><title>tree_search (MCTS_v2.py:193) (105 samples, 0.19%)</title><rect x="0.0865%" y="180" width="0.1892%" height="15" fill="rgb(227,0,7)" fg:x="48" fg:w="105"/><text x="0.3365%" y="190.50"></text></g><g><title>update (schotten_again.py:394) (98 samples, 0.18%)</title><rect x="0.2847%" y="244" width="0.1766%" height="15" fill="rgb(217,0,24)" fg:x="158" fg:w="98"/><text x="0.5347%" y="254.50"></text></g><g><title>__is_relevant_triplet (schotten_again.py:391) (88 samples, 0.16%)</title><rect x="0.3027%" y="260" width="0.1586%" height="15" fill="rgb(221,193,54)" fg:x="168" fg:w="88"/><text x="0.5527%" y="270.50"></text></g><g><title>update_state_from_action (MCTS_v2.py:179) (103 samples, 0.19%)</title><rect x="0.2811%" y="196" width="0.1856%" height="15" fill="rgb(248,212,6)" fg:x="156" fg:w="103"/><text x="0.5311%" y="206.50"></text></g><g><title>place_card (schotten_again.py:511) (102 samples, 0.18%)</title><rect x="0.2829%" y="212" width="0.1838%" height="15" fill="rgb(208,68,35)" fg:x="157" fg:w="102"/><text x="0.5329%" y="222.50"></text></g><g><title>update (schotten_again.py:432) (102 samples, 0.18%)</title><rect x="0.2829%" y="228" width="0.1838%" height="15" fill="rgb(232,128,0)" fg:x="157" fg:w="102"/><text x="0.5329%" y="238.50"></text></g><g><title>__eq__ (schotten_again.py:35) (68 samples, 0.12%)</title><rect x="0.7893%" y="292" width="0.1225%" height="15" fill="rgb(207,160,47)" fg:x="438" fg:w="68"/><text x="1.0393%" y="302.50"></text></g><g><title>__hand_in_cards (schotten_again.py:380) (153 samples, 0.28%)</title><rect x="0.7280%" y="276" width="0.2757%" height="15" fill="rgb(228,23,34)" fg:x="404" fg:w="153"/><text x="0.9780%" y="286.50"></text></g><g><title>__not_on_board (schotten_again.py:385) (58 samples, 0.10%)</title><rect x="1.0092%" y="276" width="0.1045%" height="15" fill="rgb(218,30,26)" fg:x="560" fg:w="58"/><text x="1.2592%" y="286.50"></text></g><g><title>__not_on_board (schotten_again.py:386) (249 samples, 0.45%)</title><rect x="1.1137%" y="276" width="0.4487%" height="15" fill="rgb(220,122,19)" fg:x="618" fg:w="249"/><text x="1.3637%" y="286.50"></text></g><g><title>update (schotten_again.py:394) (612 samples, 1.10%)</title><rect x="0.4703%" y="244" width="1.1029%" height="15" fill="rgb(250,228,42)" fg:x="261" fg:w="612"/><text x="0.7203%" y="254.50"></text></g><g><title>__is_relevant_triplet (schotten_again.py:391) (558 samples, 1.01%)</title><rect x="0.5676%" y="260" width="1.0056%" height="15" fill="rgb(240,193,28)" fg:x="315" fg:w="558"/><text x="0.8176%" y="270.50"></text></g><g><title>update_state_from_action (MCTS_v2.py:181) (652 samples, 1.17%)</title><rect x="0.4667%" y="196" width="1.1749%" height="15" fill="rgb(216,20,37)" fg:x="259" fg:w="652"/><text x="0.7167%" y="206.50"></text></g><g><title>place_card (schotten_again.py:511) (651 samples, 1.17%)</title><rect x="0.4685%" y="212" width="1.1731%" height="15" fill="rgb(206,188,39)" fg:x="260" fg:w="651"/><text x="0.7185%" y="222.50"></text></g><g><title>update (schotten_again.py:432) (651 samples, 1.17%)</title><rect x="0.4685%" y="228" width="1.1731%" height="15" fill="rgb(217,207,13)" fg:x="260" fg:w="651"/><text x="0.7185%" y="238.50"></text></g><g><title>tree_search (MCTS_v2.py:195) (760 samples, 1.37%)</title><rect x="0.2757%" y="180" width="1.3696%" height="15" fill="rgb(231,73,38)" fg:x="153" fg:w="760"/><text x="0.5257%" y="190.50"></text></g><g><title>uct (MCTS_v2.py:221) (886 samples, 1.60%)</title><rect x="0.0505%" y="164" width="1.5966%" height="15" fill="rgb(225,20,46)" fg:x="28" fg:w="886"/><text x="0.3005%" y="174.50"></text></g><g><title>copy (schotten_again.py:465) (65 samples, 0.12%)</title><rect x="1.7912%" y="212" width="0.1171%" height="15" fill="rgb(210,31,41)" fg:x="994" fg:w="65"/><text x="2.0412%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (schotten_again.py:465) (60 samples, 0.11%)</title><rect x="1.8003%" y="228" width="0.1081%" height="15" fill="rgb(221,200,47)" fg:x="999" fg:w="60"/><text x="2.0503%" y="238.50"></text></g><g><title>__hand_in_cards (schotten_again.py:380) (69 samples, 0.12%)</title><rect x="2.1805%" y="292" width="0.1243%" height="15" fill="rgb(226,26,5)" fg:x="1210" fg:w="69"/><text x="2.4305%" y="302.50"></text></g><g><title>__not_on_board (schotten_again.py:386) (103 samples, 0.19%)</title><rect x="2.3265%" y="292" width="0.1856%" height="15" fill="rgb(249,33,26)" fg:x="1291" fg:w="103"/><text x="2.5765%" y="302.50"></text></g><g><title>update (schotten_again.py:394) (225 samples, 0.41%)</title><rect x="2.1084%" y="260" width="0.4055%" height="15" fill="rgb(235,183,28)" fg:x="1170" fg:w="225"/><text x="2.3584%" y="270.50"></text></g><g><title>__is_relevant_triplet (schotten_again.py:391) (210 samples, 0.38%)</title><rect x="2.1354%" y="276" width="0.3784%" height="15" fill="rgb(221,5,38)" fg:x="1185" fg:w="210"/><text x="2.3854%" y="286.50"></text></g><g><title>make_move (schotten_again.py:580) (418 samples, 0.75%)</title><rect x="1.7624%" y="196" width="0.7533%" height="15" fill="rgb(247,18,42)" fg:x="978" fg:w="418"/><text x="2.0124%" y="206.50"></text></g><g><title>copy (schotten_again.py:479) (260 samples, 0.47%)</title><rect x="2.0471%" y="212" width="0.4685%" height="15" fill="rgb(241,131,45)" fg:x="1136" fg:w="260"/><text x="2.2971%" y="222.50"></text></g><g><title>__init__ (schotten_again.py:443) (240 samples, 0.43%)</title><rect x="2.0832%" y="228" width="0.4325%" height="15" fill="rgb(249,31,29)" fg:x="1156" fg:w="240"/><text x="2.3332%" y="238.50"></text></g><g><title>update (schotten_again.py:432) (236 samples, 0.43%)</title><rect x="2.0904%" y="244" width="0.4253%" height="15" fill="rgb(225,111,53)" fg:x="1160" fg:w="236"/><text x="2.3404%" y="254.50"></text></g><g><title>__eq__ (schotten_again.py:35) (71 samples, 0.13%)</title><rect x="2.6274%" y="212" width="0.1279%" height="15" fill="rgb(238,160,17)" fg:x="1458" fg:w="71"/><text x="2.8774%" y="222.50"></text></g><g><title>make_move (schotten_again.py:586) (199 samples, 0.36%)</title><rect x="2.5265%" y="196" width="0.3586%" height="15" fill="rgb(214,148,48)" fg:x="1402" fg:w="199"/><text x="2.7765%" y="206.50"></text></g><g><title>simulate_turn (MCTS_v2.py:138) (92 samples, 0.17%)</title><rect x="3.4185%" y="228" width="0.1658%" height="15" fill="rgb(232,36,49)" fg:x="1897" fg:w="92"/><text x="3.6685%" y="238.50"></text></g><g><title>choose_stone_and_card (MCTS_v2.py:23) (300 samples, 0.54%)</title><rect x="3.1248%" y="212" width="0.5406%" height="15" fill="rgb(209,103,24)" fg:x="1734" fg:w="300"/><text x="3.3748%" y="222.50"></text></g><g><title>make_move (schotten_again.py:595) (331 samples, 0.60%)</title><rect x="3.0833%" y="196" width="0.5965%" height="15" fill="rgb(229,88,8)" fg:x="1711" fg:w="331"/><text x="3.3333%" y="206.50"></text></g><g><title>__hand_in_cards (schotten_again.py:378) (227 samples, 0.41%)</title><rect x="10.8646%" y="276" width="0.4091%" height="15" fill="rgb(213,181,19)" fg:x="6029" fg:w="227"/><text x="11.1146%" y="286.50"></text></g><g><title>__hand_in_cards (schotten_again.py:379) (59 samples, 0.11%)</title><rect x="11.2737%" y="276" width="0.1063%" height="15" fill="rgb(254,191,54)" fg:x="6256" fg:w="59"/><text x="11.5237%" y="286.50"></text></g><g><title>__eq__ (schotten_again.py:35) (612 samples, 1.10%)</title><rect x="11.8558%" y="292" width="1.1029%" height="15" fill="rgb(241,83,37)" fg:x="6579" fg:w="612"/><text x="12.1058%" y="302.50"></text></g><g><title>__hand_in_cards (schotten_again.py:380) (1,251 samples, 2.25%)</title><rect x="11.3800%" y="276" width="2.2544%" height="15" fill="rgb(233,36,39)" fg:x="6315" fg:w="1251"/><text x="11.6300%" y="286.50">_..</text></g><g><title>__eq__ (schotten_again.py:36) (375 samples, 0.68%)</title><rect x="12.9586%" y="292" width="0.6758%" height="15" fill="rgb(226,3,54)" fg:x="7191" fg:w="375"/><text x="13.2086%" y="302.50"></text></g><g><title>__not_on_board (schotten_again.py:385) (2,344 samples, 4.22%)</title><rect x="13.7822%" y="276" width="4.2240%" height="15" fill="rgb(245,192,40)" fg:x="7648" fg:w="2344"/><text x="14.0322%" y="286.50">__not..</text></g><g><title>__eq__ (schotten_again.py:34) (89 samples, 0.16%)</title><rect x="31.0459%" y="292" width="0.1604%" height="15" fill="rgb(238,167,29)" fg:x="17228" fg:w="89"/><text x="31.2959%" y="302.50"></text></g><g><title>__eq__ (schotten_again.py:35) (5,309 samples, 9.57%)</title><rect x="31.2063%" y="292" width="9.5671%" height="15" fill="rgb(232,182,51)" fg:x="17317" fg:w="5309"/><text x="31.4563%" y="302.50">__eq__ (schott..</text></g><g><title>__not_on_board (schotten_again.py:386) (15,663 samples, 28.23%)</title><rect x="18.0062%" y="276" width="28.2257%" height="15" fill="rgb(231,60,39)" fg:x="9992" fg:w="15663"/><text x="18.2562%" y="286.50">__not_on_board (schotten_again.py:386)</text></g><g><title>__eq__ (schotten_again.py:36) (3,029 samples, 5.46%)</title><rect x="40.7734%" y="292" width="5.4584%" height="15" fill="rgb(208,69,12)" fg:x="22626" fg:w="3029"/><text x="41.0234%" y="302.50">__eq__ ..</text></g><g><title>__not_on_board (schotten_again.py:387) (341 samples, 0.61%)</title><rect x="46.2319%" y="276" width="0.6145%" height="15" fill="rgb(235,93,37)" fg:x="25655" fg:w="341"/><text x="46.4819%" y="286.50"></text></g><g><title>update (schotten_again.py:394) (23,927 samples, 43.12%)</title><rect x="3.7627%" y="244" width="43.1179%" height="15" fill="rgb(213,116,39)" fg:x="2088" fg:w="23927"/><text x="4.0127%" y="254.50">update (schotten_again.py:394)</text></g><g><title>__is_relevant_triplet (schotten_again.py:391) (21,387 samples, 38.54%)</title><rect x="8.3399%" y="260" width="38.5407%" height="15" fill="rgb(222,207,29)" fg:x="4628" fg:w="21387"/><text x="8.5899%" y="270.50">__is_relevant_triplet (schotten_again.py:391)</text></g><g><title>place_card (schotten_again.py:511) (25,506 samples, 45.96%)</title><rect x="3.6978%" y="212" width="45.9634%" height="15" fill="rgb(206,96,30)" fg:x="2052" fg:w="25506"/><text x="3.9478%" y="222.50">place_card (schotten_again.py:511)</text></g><g><title>update (schotten_again.py:432) (25,491 samples, 45.94%)</title><rect x="3.7249%" y="228" width="45.9364%" height="15" fill="rgb(218,138,4)" fg:x="2067" fg:w="25491"/><text x="3.9749%" y="238.50">update (schotten_again.py:432)</text></g><g><title>update (schotten_again.py:395) (1,543 samples, 2.78%)</title><rect x="46.8806%" y="244" width="2.7806%" height="15" fill="rgb(250,191,14)" fg:x="26015" fg:w="1543"/><text x="47.1306%" y="254.50">up..</text></g><g><title>make_move (schotten_again.py:600) (25,528 samples, 46.00%)</title><rect x="3.6798%" y="196" width="46.0030%" height="15" fill="rgb(239,60,40)" fg:x="2042" fg:w="25528"/><text x="3.9298%" y="206.50">make_move (schotten_again.py:600)</text></g><g><title>play (schotten_again.py:553) (26,636 samples, 48.00%)</title><rect x="1.7029%" y="180" width="47.9997%" height="15" fill="rgb(206,27,48)" fg:x="945" fg:w="26636"/><text x="1.9529%" y="190.50">play (schotten_again.py:553)</text></g><g><title>copy (schotten_again.py:465) (65 samples, 0.12%)</title><rect x="49.8648%" y="212" width="0.1171%" height="15" fill="rgb(225,35,8)" fg:x="27671" fg:w="65"/><text x="50.1148%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (schotten_again.py:465) (57 samples, 0.10%)</title><rect x="49.8793%" y="228" width="0.1027%" height="15" fill="rgb(250,213,24)" fg:x="27679" fg:w="57"/><text x="50.1293%" y="238.50"></text></g><g><title>__hand_in_cards (schotten_again.py:380) (56 samples, 0.10%)</title><rect x="50.2685%" y="292" width="0.1009%" height="15" fill="rgb(247,123,22)" fg:x="27895" fg:w="56"/><text x="50.5185%" y="302.50"></text></g><g><title>__not_on_board (schotten_again.py:386) (105 samples, 0.19%)</title><rect x="50.3947%" y="292" width="0.1892%" height="15" fill="rgb(231,138,38)" fg:x="27965" fg:w="105"/><text x="50.6447%" y="302.50"></text></g><g><title>update (schotten_again.py:394) (217 samples, 0.39%)</title><rect x="50.1946%" y="260" width="0.3910%" height="15" fill="rgb(231,145,46)" fg:x="27854" fg:w="217"/><text x="50.4446%" y="270.50"></text></g><g><title>__is_relevant_triplet (schotten_again.py:391) (202 samples, 0.36%)</title><rect x="50.2217%" y="276" width="0.3640%" height="15" fill="rgb(251,118,11)" fg:x="27869" fg:w="202"/><text x="50.4717%" y="286.50"></text></g><g><title>make_move (schotten_again.py:580) (417 samples, 0.75%)</title><rect x="49.8360%" y="196" width="0.7515%" height="15" fill="rgb(217,147,25)" fg:x="27655" fg:w="417"/><text x="50.0860%" y="206.50"></text></g><g><title>copy (schotten_again.py:479) (260 samples, 0.47%)</title><rect x="50.1189%" y="212" width="0.4685%" height="15" fill="rgb(247,81,37)" fg:x="27812" fg:w="260"/><text x="50.3689%" y="222.50"></text></g><g><title>__init__ (schotten_again.py:443) (238 samples, 0.43%)</title><rect x="50.1586%" y="228" width="0.4289%" height="15" fill="rgb(209,12,38)" fg:x="27834" fg:w="238"/><text x="50.4086%" y="238.50"></text></g><g><title>update (schotten_again.py:432) (230 samples, 0.41%)</title><rect x="50.1730%" y="244" width="0.4145%" height="15" fill="rgb(227,1,9)" fg:x="27842" fg:w="230"/><text x="50.4230%" y="254.50"></text></g><g><title>__hand_in_cards (schotten_again.py:380) (65 samples, 0.12%)</title><rect x="50.9389%" y="324" width="0.1171%" height="15" fill="rgb(248,47,43)" fg:x="28267" fg:w="65"/><text x="51.1889%" y="334.50"></text></g><g><title>__not_on_board (schotten_again.py:386) (87 samples, 0.16%)</title><rect x="51.0668%" y="324" width="0.1568%" height="15" fill="rgb(221,10,30)" fg:x="28338" fg:w="87"/><text x="51.3168%" y="334.50"></text></g><g><title>update (schotten_again.py:394) (204 samples, 0.37%)</title><rect x="50.8596%" y="292" width="0.3676%" height="15" fill="rgb(210,229,1)" fg:x="28223" fg:w="204"/><text x="51.1096%" y="302.50"></text></g><g><title>__is_relevant_triplet (schotten_again.py:391) (187 samples, 0.34%)</title><rect x="50.8902%" y="308" width="0.3370%" height="15" fill="rgb(222,148,37)" fg:x="28240" fg:w="187"/><text x="51.1402%" y="318.50"></text></g><g><title>change_pov (schotten_again.py:191) (336 samples, 0.61%)</title><rect x="50.6253%" y="228" width="0.6055%" height="15" fill="rgb(234,67,33)" fg:x="28093" fg:w="336"/><text x="50.8753%" y="238.50"></text></g><g><title>copy (schotten_again.py:479) (232 samples, 0.42%)</title><rect x="50.8127%" y="244" width="0.4181%" height="15" fill="rgb(247,98,35)" fg:x="28197" fg:w="232"/><text x="51.0627%" y="254.50"></text></g><g><title>__init__ (schotten_again.py:443) (224 samples, 0.40%)</title><rect x="50.8271%" y="260" width="0.4037%" height="15" fill="rgb(247,138,52)" fg:x="28205" fg:w="224"/><text x="51.0771%" y="270.50"></text></g><g><title>update (schotten_again.py:432) (218 samples, 0.39%)</title><rect x="50.8380%" y="276" width="0.3928%" height="15" fill="rgb(213,79,30)" fg:x="28211" fg:w="218"/><text x="51.0880%" y="286.50"></text></g><g><title>change_pov (schotten_again.py:446) (381 samples, 0.69%)</title><rect x="50.6181%" y="212" width="0.6866%" height="15" fill="rgb(246,177,23)" fg:x="28089" fg:w="381"/><text x="50.8681%" y="222.50"></text></g><g><title>make_move (schotten_again.py:582) (447 samples, 0.81%)</title><rect x="50.5875%" y="196" width="0.8055%" height="15" fill="rgb(230,62,27)" fg:x="28072" fg:w="447"/><text x="50.8375%" y="206.50"></text></g><g><title>make_move (schotten_again.py:586) (166 samples, 0.30%)</title><rect x="51.4056%" y="196" width="0.2991%" height="15" fill="rgb(216,154,8)" fg:x="28526" fg:w="166"/><text x="51.6556%" y="206.50"></text></g><g><title>make_move (schotten_again.py:593) (60 samples, 0.11%)</title><rect x="51.8039%" y="196" width="0.1081%" height="15" fill="rgb(244,35,45)" fg:x="28747" fg:w="60"/><text x="52.0539%" y="206.50"></text></g><g><title>claim_stone (schotten_again.py:564) (56 samples, 0.10%)</title><rect x="51.8111%" y="212" width="0.1009%" height="15" fill="rgb(251,115,12)" fg:x="28751" fg:w="56"/><text x="52.0611%" y="222.50"></text></g><g><title>simulate_turn (MCTS_v2.py:138) (81 samples, 0.15%)</title><rect x="52.1985%" y="228" width="0.1460%" height="15" fill="rgb(240,54,50)" fg:x="28966" fg:w="81"/><text x="52.4485%" y="238.50"></text></g><g><title>choose_stone_and_card (MCTS_v2.py:23) (245 samples, 0.44%)</title><rect x="51.9480%" y="212" width="0.4415%" height="15" fill="rgb(233,84,52)" fg:x="28827" fg:w="245"/><text x="52.1980%" y="222.50"></text></g><g><title>make_move (schotten_again.py:595) (270 samples, 0.49%)</title><rect x="51.9120%" y="196" width="0.4866%" height="15" fill="rgb(207,117,47)" fg:x="28807" fg:w="270"/><text x="52.1620%" y="206.50"></text></g><g><title>__hand_in_cards (schotten_again.py:378) (265 samples, 0.48%)</title><rect x="59.5149%" y="276" width="0.4775%" height="15" fill="rgb(249,43,39)" fg:x="33026" fg:w="265"/><text x="59.7649%" y="286.50"></text></g><g><title>__eq__ (schotten_again.py:35) (621 samples, 1.12%)</title><rect x="60.6141%" y="292" width="1.1191%" height="15" fill="rgb(209,38,44)" fg:x="33636" fg:w="621"/><text x="60.8641%" y="302.50"></text></g><g><title>__hand_in_cards (schotten_again.py:380) (1,274 samples, 2.30%)</title><rect x="60.0897%" y="276" width="2.2958%" height="15" fill="rgb(236,212,23)" fg:x="33345" fg:w="1274"/><text x="60.3397%" y="286.50">_..</text></g><g><title>__eq__ (schotten_again.py:36) (362 samples, 0.65%)</title><rect x="61.7332%" y="292" width="0.6523%" height="15" fill="rgb(242,79,21)" fg:x="34257" fg:w="362"/><text x="61.9832%" y="302.50"></text></g><g><title>__not_on_board (schotten_again.py:385) (2,362 samples, 4.26%)</title><rect x="62.5568%" y="276" width="4.2565%" height="15" fill="rgb(211,96,35)" fg:x="34714" fg:w="2362"/><text x="62.8068%" y="286.50">__not..</text></g><g><title>__eq__ (schotten_again.py:34) (115 samples, 0.21%)</title><rect x="80.0440%" y="292" width="0.2072%" height="15" fill="rgb(253,215,40)" fg:x="44418" fg:w="115"/><text x="80.2940%" y="302.50"></text></g><g><title>__eq__ (schotten_again.py:35) (5,592 samples, 10.08%)</title><rect x="80.2512%" y="292" width="10.0771%" height="15" fill="rgb(211,81,21)" fg:x="44533" fg:w="5592"/><text x="80.5012%" y="302.50">__eq__ (schotte..</text></g><g><title>__not_on_board (schotten_again.py:386) (16,358 samples, 29.48%)</title><rect x="66.8132%" y="276" width="29.4781%" height="15" fill="rgb(208,190,38)" fg:x="37076" fg:w="16358"/><text x="67.0632%" y="286.50">__not_on_board (schotten_again.py:386)</text></g><g><title>__eq__ (schotten_again.py:36) (3,309 samples, 5.96%)</title><rect x="90.3283%" y="292" width="5.9630%" height="15" fill="rgb(235,213,38)" fg:x="50125" fg:w="3309"/><text x="90.5783%" y="302.50">__eq__ (..</text></g><g><title>__not_on_board (schotten_again.py:387) (371 samples, 0.67%)</title><rect x="96.2914%" y="276" width="0.6686%" height="15" fill="rgb(237,122,38)" fg:x="53434" fg:w="371"/><text x="96.5414%" y="286.50"></text></g><g><title>update (schotten_again.py:394) (24,725 samples, 44.56%)</title><rect x="52.4454%" y="244" width="44.5560%" height="15" fill="rgb(244,218,35)" fg:x="29103" fg:w="24725"/><text x="52.6954%" y="254.50">update (schotten_again.py:394)</text></g><g><title>__is_relevant_triplet (schotten_again.py:391) (22,206 samples, 40.02%)</title><rect x="56.9848%" y="260" width="40.0166%" height="15" fill="rgb(240,68,47)" fg:x="31622" fg:w="22206"/><text x="57.2348%" y="270.50">__is_relevant_triplet (schotten_again.py:391)</text></g><g><title>place_card (schotten_again.py:511) (26,357 samples, 47.50%)</title><rect x="52.4112%" y="212" width="47.4969%" height="15" fill="rgb(210,16,53)" fg:x="29084" fg:w="26357"/><text x="52.6612%" y="222.50">place_card (schotten_again.py:511)</text></g><g><title>update (schotten_again.py:432) (26,349 samples, 47.48%)</title><rect x="52.4256%" y="228" width="47.4825%" height="15" fill="rgb(235,124,12)" fg:x="29092" fg:w="26349"/><text x="52.6756%" y="238.50">update (schotten_again.py:432)</text></g><g><title>update (schotten_again.py:395) (1,613 samples, 2.91%)</title><rect x="97.0014%" y="244" width="2.9067%" height="15" fill="rgb(224,169,11)" fg:x="53828" fg:w="1613"/><text x="97.2514%" y="254.50">up..</text></g><g><title>make_move (schotten_again.py:600) (26,374 samples, 47.53%)</title><rect x="52.3985%" y="196" width="47.5276%" height="15" fill="rgb(250,166,2)" fg:x="29077" fg:w="26374"/><text x="52.6485%" y="206.50">make_move (schotten_again.py:600)</text></g><g><title>play (schotten_again.py:559) (27,864 samples, 50.21%)</title><rect x="49.7441%" y="180" width="50.2126%" height="15" fill="rgb(242,216,29)" fg:x="27604" fg:w="27864"/><text x="49.9941%" y="190.50">play (schotten_again.py:559)</text></g><g><title>uct (MCTS_v2.py:230) (54,542 samples, 98.29%)</title><rect x="1.7011%" y="164" width="98.2880%" height="15" fill="rgb(230,116,27)" fg:x="944" fg:w="54542"/><text x="1.9511%" y="174.50">uct (MCTS_v2.py:230)</text></g><g><title>make_move (schotten_again.py:595) (55,459 samples, 99.94%)</title><rect x="0.0505%" y="132" width="99.9405%" height="15" fill="rgb(228,99,48)" fg:x="28" fg:w="55459"/><text x="0.3005%" y="142.50">make_move (schotten_again.py:595)</text></g><g><title>choose_stone_and_card (MCTS_v2.py:254) (55,459 samples, 99.94%)</title><rect x="0.0505%" y="148" width="99.9405%" height="15" fill="rgb(253,11,6)" fg:x="28" fg:w="55459"/><text x="0.3005%" y="158.50">choose_stone_and_card (MCTS_v2.py:254)</text></g><g><title>all (55,492 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(247,143,39)" fg:x="0" fg:w="55492"/><text x="0.2500%" y="62.50"></text></g><g><title>process 13960:&quot;&quot;python&quot; test2.py&quot; (55,492 samples, 100.00%)</title><rect x="0.0000%" y="68" width="100.0000%" height="15" fill="rgb(236,97,10)" fg:x="0" fg:w="55492"/><text x="0.2500%" y="78.50">process 13960:&quot;&quot;python&quot; test2.py&quot;</text></g><g><title>process 13936:&quot;C:\ProgramData\Anaconda3\python.exe test2.py&quot; (55,492 samples, 100.00%)</title><rect x="0.0000%" y="84" width="100.0000%" height="15" fill="rgb(233,208,19)" fg:x="0" fg:w="55492"/><text x="0.2500%" y="94.50">process 13936:&quot;C:\ProgramData\Anaconda3\python.exe test2.py&quot;</text></g><g><title>&lt;module&gt; (test2.py:32) (55,466 samples, 99.95%)</title><rect x="0.0469%" y="100" width="99.9531%" height="15" fill="rgb(216,164,2)" fg:x="26" fg:w="55466"/><text x="0.2969%" y="110.50">&lt;module&gt; (test2.py:32)</text></g><g><title>play (schotten_again.py:553) (55,466 samples, 99.95%)</title><rect x="0.0469%" y="116" width="99.9531%" height="15" fill="rgb(220,129,5)" fg:x="26" fg:w="55466"/><text x="0.2969%" y="126.50">play (schotten_again.py:553)</text></g></svg></svg>